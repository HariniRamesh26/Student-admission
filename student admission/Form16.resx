<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>